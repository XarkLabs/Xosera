#
# CopAsm (aka repurposed XLAsm) assembler
# vim: set noet ts=8 sw=8
#
# Copyright (c) 2022 Xark - https://hackaday.io/Xark
#
# See top-level LICENSE file for license information. (Hint: MIT)

# Makefile "best practices" from https://tech.davis-hansson.com/p/make/ (but not forcing gmake)
SHELL := bash
.SHELLFLAGS := -eu -o pipefail -c
.ONESHELL:
.DELETE_ON_ERROR:
MAKEFLAGS += --warn-undefined-variables
MAKEFLAGS += --no-builtin-rules

# C++ compile flags (these seem okay with g++ or clang++)
CXX_FLAGS = -std=c++14 -O2 -Wall -Wextra -Wno-poison-system-directories -Wno-c++98-compat -Wno-c++98-compat-pedantic -Wno-c++98-c++11-compat-binary-literal -Wno-padded -Wno-exit-time-destructors -Wno-global-constructors -Wno-gnu-zero-variadic-macro-arguments -Wno-covered-switch-default -Wno-unreachable-code-break -Wno-switch-enum
# CXX_FLAGS += -DNDEBUG

# File names
EXEC = xosera-copasm
BINDIR = bin
OBJDIR = obj

SOURCES = $(wildcard *.cpp)
OBJECTS = $(addprefix $(OBJDIR)/,$(SOURCES:.cpp=.o))

$(info === $(EXEC) === in "$(CURDIR)")

all: $(BINDIR)/$(EXEC)
.PHONY: all

# Main target
$(BINDIR)/$(EXEC): $(OBJECTS) $(MAKEFILE_LIST)
	@mkdir -p $(@D)
	$(CXX) $(CXX_FLAGS) $(OBJECTS) -o $(BINDIR)/$(EXEC)
	@echo === Successfully built copper assembler: copper/CopAsm/$(BINDIR)/$(EXEC)

# normal test targets
test: $(BINDIR)/$(EXEC)
	$(BINDIR)/$(EXEC) -i../../xosera_m68k_api -l Tests/cop_diagonal.casm -o $(OBJDIR)/cop_diagonal.h
	$(BINDIR)/$(EXEC) -i../../xosera_m68k_api -l Tests/cop_diagonal.casm -o $(OBJDIR)/cop_diagonal.vsim.h
	$(BINDIR)/$(EXEC) -i../../xosera_m68k_api -l Tests/cop_diagonal.casm -o $(OBJDIR)/cop_diagonal.mem
	$(BINDIR)/$(EXEC) -i../../xosera_m68k_api -l Tests/cop_diagonal.casm -o $(OBJDIR)/cop_diagonal.bin
	$(BINDIR)/$(EXEC) -i../../xosera_m68k_api -l Tests/copy_table.casm -o $(OBJDIR)/copy_table.h
	$(BINDIR)/$(EXEC) -i../../xosera_m68k_api -l Tests/test_macro_label.asm -o $(OBJDIR)/test_macro_label.h
	$(BINDIR)/$(EXEC) -i../../xosera_m68k_api -l Tests/test_macro_label.asm -o $(OBJDIR)/test_macro_label.mem
.PHONY: test

# debug testing targets
dbug:$(BINDIR)/$(EXEC)
	$(BINDIR)/$(EXEC) -v -v -v -k -l Tests/test_macro_label.asm -o $(OBJDIR)/test_macro_label_v.h
	$(BINDIR)/$(EXEC) -l Tests/test_macro_label.asm -o $(OBJDIR)/test_macro_label.h
	$(BINDIR)/$(EXEC) -l Tests/test_macro_label.asm -o $(OBJDIR)/test_macro_label.bin
.PHONY: dbug

# To obtain object files
$(OBJDIR)/%.o: %.cpp $(MAKEFILE_LIST)
	@mkdir -p $(@D)
	$(CXX) -c $(CXX_FLAGS) -MMD $< -o $@

# To remove generated files
clean:
	rm -f $(BINDIR)/* $(OBJDIR)/*
.PHONY: clean

# include Make dependency info generated by compiler
-include $(OBJDIR)/*.d
